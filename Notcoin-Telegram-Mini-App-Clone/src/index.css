import express from "express";
import cors from "cors";
import dotenv from "dotenv";
import { createClient } from "@supabase/supabase-js";
import { Configuration, OpenAIApi } from "openai";

dotenv.config();

const app = express();
app.use(cors());
app.use(express.json());

const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_KEY);
const openai = new OpenAIApi(new Configuration({ apiKey: process.env.OPENAI_API_KEY }));

// 获取所有角色
app.get("/api/characters", async (req, res) => {
  const { data, error } = await supabase.from("characters").select("*");
  if (error) return res.status(500).json({ error });
  res.json(data);
});

// 发送消息 & 获取 AI 回复
app.post("/api/messages", async (req, res) => {
  const { user_id, character_id, message } = req.body;

  // 1️⃣ 存入数据库
  await supabase.from("messages").insert([{ user_id, character_id, message }]);

  // 2️⃣ 生成 AI 回复
  const character = await supabase.from("characters").select("name, description").eq("id", character_id).single();
  const prompt = `${character.data.name}(${character.data.description})对用户说: ${message}`;
  
  const aiResponse = await openai.createChatCompletion({
    model: "gpt-4",
    messages: [{ role: "system", content: prompt }],
  });

  const reply = aiResponse.data.choices[0].message.content;

  // 3️⃣ 存入数据库 & 返回结果
  await supabase.from("messages").insert([{ user_id, character_id, message: reply }]);
  res.json({ reply });
});

app.listen(5000, () => console.log("API 运行在端口 5000"));
