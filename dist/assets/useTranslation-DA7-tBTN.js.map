{"version":3,"file":"useTranslation-DA7-tBTN.js","sources":["../../node_modules/react-i18next/dist/es/utils.js","../../node_modules/react-i18next/dist/es/context.js","../../node_modules/react-i18next/dist/es/useTranslation.js"],"sourcesContent":["export const warn = (i18n, code, msg, rest) => {\n  const args = [msg, {\n    code,\n    ...(rest || {})\n  }];\n  if (i18n?.services?.logger?.forward) {\n    return i18n.services.logger.forward(args, 'warn', 'react-i18next::', true);\n  }\n  if (isString(args[0])) args[0] = `react-i18next:: ${args[0]}`;\n  if (i18n?.services?.logger?.warn) {\n    i18n.services.logger.warn(...args);\n  } else if (console?.warn) {\n    console.warn(...args);\n  }\n};\nconst alreadyWarned = {};\nexport const warnOnce = (i18n, code, msg, rest) => {\n  if (isString(msg) && alreadyWarned[msg]) return;\n  if (isString(msg)) alreadyWarned[msg] = new Date();\n  warn(i18n, code, msg, rest);\n};\nconst loadedClb = (i18n, cb) => () => {\n  if (i18n.isInitialized) {\n    cb();\n  } else {\n    const initialized = () => {\n      setTimeout(() => {\n        i18n.off('initialized', initialized);\n      }, 0);\n      cb();\n    };\n    i18n.on('initialized', initialized);\n  }\n};\nexport const loadNamespaces = (i18n, ns, cb) => {\n  i18n.loadNamespaces(ns, loadedClb(i18n, cb));\n};\nexport const loadLanguages = (i18n, lng, ns, cb) => {\n  if (isString(ns)) ns = [ns];\n  if (i18n.options.preload && i18n.options.preload.indexOf(lng) > -1) return loadNamespaces(i18n, ns, cb);\n  ns.forEach(n => {\n    if (i18n.options.ns.indexOf(n) < 0) i18n.options.ns.push(n);\n  });\n  i18n.loadLanguages(lng, loadedClb(i18n, cb));\n};\nexport const hasLoadedNamespace = (ns, i18n, options = {}) => {\n  if (!i18n.languages || !i18n.languages.length) {\n    warnOnce(i18n, 'NO_LANGUAGES', 'i18n.languages were undefined or empty', {\n      languages: i18n.languages\n    });\n    return true;\n  }\n  return i18n.hasLoadedNamespace(ns, {\n    lng: options.lng,\n    precheck: (i18nInstance, loadNotPending) => {\n      if (options.bindI18n?.indexOf('languageChanging') > -1 && i18nInstance.services.backendConnector.backend && i18nInstance.isLanguageChangingTo && !loadNotPending(i18nInstance.isLanguageChangingTo, ns)) return false;\n    }\n  });\n};\nexport const getDisplayName = Component => Component.displayName || Component.name || (isString(Component) && Component.length > 0 ? Component : 'Unknown');\nexport const isString = obj => typeof obj === 'string';\nexport const isObject = obj => typeof obj === 'object' && obj !== null;","import { createContext } from 'react';\nimport { getDefaults, setDefaults } from './defaults.js';\nimport { getI18n, setI18n } from './i18nInstance.js';\nimport { initReactI18next } from './initReactI18next.js';\nexport { getDefaults, setDefaults, getI18n, setI18n, initReactI18next };\nexport const I18nContext = createContext();\nexport class ReportNamespaces {\n  constructor() {\n    this.usedNamespaces = {};\n  }\n  addUsedNamespaces(namespaces) {\n    namespaces.forEach(ns => {\n      if (!this.usedNamespaces[ns]) this.usedNamespaces[ns] = true;\n    });\n  }\n  getUsedNamespaces() {\n    return Object.keys(this.usedNamespaces);\n  }\n}\nexport const composeInitialProps = ForComponent => async ctx => {\n  const componentsInitialProps = (await ForComponent.getInitialProps?.(ctx)) ?? {};\n  const i18nInitialProps = getInitialProps();\n  return {\n    ...componentsInitialProps,\n    ...i18nInitialProps\n  };\n};\nexport const getInitialProps = () => {\n  const i18n = getI18n();\n  const namespaces = i18n.reportNamespaces?.getUsedNamespaces() ?? [];\n  const ret = {};\n  const initialI18nStore = {};\n  i18n.languages.forEach(l => {\n    initialI18nStore[l] = {};\n    namespaces.forEach(ns => {\n      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};\n    });\n  });\n  ret.initialI18nStore = initialI18nStore;\n  ret.initialLanguage = i18n.language;\n  return ret;\n};","import { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context.js';\nimport { warnOnce, loadNamespaces, loadLanguages, hasLoadedNamespace, isString, isObject } from './utils.js';\nconst usePrevious = (value, ignore) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\nconst alwaysNewT = (i18n, language, namespace, keyPrefix) => i18n.getFixedT(language, namespace, keyPrefix);\nconst useMemoizedT = (i18n, language, namespace, keyPrefix) => useCallback(alwaysNewT(i18n, language, namespace, keyPrefix), [i18n, language, namespace, keyPrefix]);\nexport const useTranslation = (ns, props = {}) => {\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = useContext(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n  if (!i18n) {\n    warnOnce(i18n, 'NO_I18NEXT_INSTANCE', 'useTranslation: You will need to pass in an i18next instance by using initReactI18next');\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if (isString(optsOrDefaultValue)) return optsOrDefaultValue;\n      if (isObject(optsOrDefaultValue) && isString(optsOrDefaultValue.defaultValue)) return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n  if (i18n.options.react?.wait) warnOnce(i18n, 'DEPRECATED_OPTION', 'useTranslation: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n  const i18nOptions = {\n    ...getDefaults(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || i18n.options?.defaultNS;\n  namespaces = isString(namespaces) ? [namespaces] : namespaces || ['translation'];\n  i18n.reportNamespaces.addUsedNamespaces?.(namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => hasLoadedNamespace(n, i18n, i18nOptions));\n  const memoGetT = useMemoizedT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const getT = () => memoGetT;\n  const getNewT = () => alwaysNewT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const [t, setT] = useState(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      }\n    }\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getNewT);\n    }\n    const boundReset = () => {\n      if (isMounted.current) setT(getNewT);\n    };\n    if (bindI18n) i18n?.on(bindI18n, boundReset);\n    if (bindI18nStore) i18n?.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (i18n) bindI18n?.split(' ').forEach(e => i18n.off(e, boundReset));\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  useEffect(() => {\n    if (isMounted.current && ready) {\n      setT(getT);\n    }\n  }, [i18n, keyPrefix, ready]);\n  const ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(resolve => {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      loadNamespaces(i18n, namespaces, () => resolve());\n    }\n  });\n};"],"names":["warn","i18n","code","msg","rest","args","_b","_a","isString","_d","_c","alreadyWarned","warnOnce","loadedClb","cb","initialized","loadNamespaces","ns","loadLanguages","lng","n","hasLoadedNamespace","options","i18nInstance","loadNotPending","obj","isObject","I18nContext","createContext","ReportNamespaces","namespaces","usePrevious","value","ignore","ref","useRef","useEffect","alwaysNewT","language","namespace","keyPrefix","useMemoizedT","useCallback","useTranslation","props","i18nFromProps","i18nFromContext","defaultNSFromContext","useContext","getI18n","notReadyT","k","optsOrDefaultValue","retNotReady","i18nOptions","getDefaults","useSuspense","ready","memoGetT","getT","getNewT","t","setT","useState","joinedNS","previousJoinedNS","isMounted","bindI18n","bindI18nStore","boundReset","e","ret","resolve"],"mappings":"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","x_google_ignoreList":[0,1,2]}