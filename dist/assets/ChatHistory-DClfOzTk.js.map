{"version":3,"file":"ChatHistory-DClfOzTk.js","sources":["../../node_modules/@mui/icons-material/esm/ArrowForward.js","../../node_modules/@mui/icons-material/esm/Delete.js","../../src/pages/ChatHistory.jsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 4-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"\n}), 'ArrowForward');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Avatar,\r\n  IconButton,\r\n  Chip,\r\n  Container,\r\n} from '@mui/material';\r\nimport {\r\n  Delete as DeleteIcon,\r\n  ArrowForward as ArrowForwardIcon\r\n} from '@mui/icons-material';\r\nimport { CHARACTERS } from '../data/characters';\r\nimport useUserStore from '../store/userStore';\r\nimport NavBar from '../components/NavBar';\r\n\r\nconst ChatHistory = () => {\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n  const { chatHistory, clearChatHistory } = useUserStore();\r\n\r\n  const handleChatClick = (characterId) => {\r\n    navigate(`/chat/${characterId}`);\r\n  };\r\n\r\n  const handleDeleteChat = (characterId, event) => {\r\n    event.stopPropagation();\r\n    clearChatHistory(characterId);\r\n  };\r\n\r\n  const formatTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleString();\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ \r\n      minHeight: '100vh',\r\n      bgcolor: '#1A1B1E',\r\n      color: 'white',\r\n      pb: 4\r\n    }}>\r\n      <NavBar title={t('nav.chat')} />\r\n\r\n      <Container maxWidth=\"sm\">\r\n        {Object.entries(chatHistory || {}).map(([characterId, history]) => {\r\n          const character = CHARACTERS[characterId];\r\n          if (!character) return null;\r\n\r\n          const lastMessage = history.messages[history.messages.length - 1];\r\n          \r\n          return (\r\n            <Card\r\n              key={characterId}\r\n              onClick={() => handleChatClick(characterId)}\r\n              sx={{\r\n                mb: 2,\r\n                cursor: 'pointer',\r\n                bgcolor: 'rgba(255, 255, 255, 0.05)',\r\n                transition: 'transform 0.2s',\r\n                '&:hover': {\r\n                  transform: 'translateY(-2px)',\r\n                  bgcolor: 'rgba(255, 255, 255, 0.08)'\r\n                }\r\n              }}\r\n            >\r\n              <CardContent sx={{ \r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: 2,\r\n                p: '16px !important'\r\n              }}>\r\n                <Avatar\r\n                  src={character.avatar}\r\n                  sx={{ width: 50, height: 50 }}\r\n                />\r\n                <Box sx={{ flex: 1 }}>\r\n                  <Box sx={{ \r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center',\r\n                    mb: 1\r\n                  }}>\r\n                    <Typography variant=\"subtitle1\" sx={{ fontWeight: 500 }}>\r\n                      {character.name}\r\n                    </Typography>\r\n                    <Box sx={{ display: 'flex', gap: 1, alignItems: 'center' }}>\r\n                      <Typography variant=\"caption\" sx={{ color: 'rgba(255, 255, 255, 0.5)' }}>\r\n                        {formatTimestamp(lastMessage?.timestamp)}\r\n                      </Typography>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={(e) => handleDeleteChat(characterId, e)}\r\n                        sx={{ \r\n                          color: 'rgba(255, 255, 255, 0.5)',\r\n                          '&:hover': {\r\n                            color: '#ff4444',\r\n                            bgcolor: 'rgba(255, 68, 68, 0.1)'\r\n                          }\r\n                        }}\r\n                      >\r\n                        <DeleteIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        sx={{ \r\n                          color: 'rgba(255, 255, 255, 0.5)',\r\n                          '&:hover': {\r\n                            color: 'white',\r\n                            bgcolor: 'rgba(255, 255, 255, 0.1)'\r\n                          }\r\n                        }}\r\n                      >\r\n                        <ArrowForwardIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Box>\r\n                  </Box>\r\n                  <Typography \r\n                    variant=\"body2\" \r\n                    sx={{ \r\n                      color: 'rgba(255, 255, 255, 0.7)',\r\n                      overflow: 'hidden',\r\n                      textOverflow: 'ellipsis',\r\n                      whiteSpace: 'nowrap'\r\n                    }}\r\n                  >\r\n                    {lastMessage?.text || t('chat.startNewChat')}\r\n                  </Typography>\r\n                  <Box sx={{ mt: 1, display: 'flex', gap: 1 }}>\r\n                    {character.tags?.slice(0, 3).map((tag, index) => (\r\n                      <Chip\r\n                        key={index}\r\n                        label={tag}\r\n                        size=\"small\"\r\n                        sx={{\r\n                          bgcolor: 'rgba(124, 58, 237, 0.2)',\r\n                          color: 'white',\r\n                          height: '20px',\r\n                          '& .MuiChip-label': {\r\n                            px: 1,\r\n                            fontSize: '0.75rem'\r\n                          }\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatHistory; "],"names":["ArrowForwardIcon","createSvgIcon","_jsx","DeleteIcon","ChatHistory","navigate","useNavigate","t","useTranslation","chatHistory","clearChatHistory","useUserStore","handleChatClick","characterId","handleDeleteChat","event","formatTimestamp","timestamp","jsxs","Box","jsx","NavBar","Container","history","character","CHARACTERS","lastMessage","Card","CardContent","Avatar","Typography","IconButton","e","_a","tag","index","Chip"],"mappings":"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","x_google_ignoreList":[0,1]}